{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["rgbToHex","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","console","log","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","placeholder","value","onChange","target","map","key","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLASeA,ICwBAC,EA9BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAExDC,QAAQC,IAAIL,GACZ,IAAMM,EAAMT,EAAIU,KAAK,KAEfC,EAAQ,WAAOR,GAOrB,OANAS,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBR,GAAS,KACR,KACH,OAAO,kBAAMS,aAAaF,MACzB,CAACR,IAEF,6BACEW,UAAS,gBAAWd,EAAQ,IAAM,eAClCe,MAAO,CACLC,gBAAgB,OAAD,OAAST,EAAT,MAEjBU,QAAS,WACPb,GAAS,GACTc,UAAUC,UAAUC,UAAUX,KAGhC,uBAAGK,UAAU,iBAAb,IAA+Bf,EAA/B,MACA,uBAAGe,UAAU,eAAeL,EAA5B,KACCN,GAAS,uBAAGW,UAAU,SAAb,yB,gBC0BDO,MAjDf,WAAgB,IAAD,EACanB,mBAAS,IADtB,mBACNoB,EADM,KACCC,EADD,OAEarB,oBAAS,GAFtB,mBAENsB,EAFM,KAECC,EAFD,OAIWvB,mBAAS,IAAIwB,IAAO,WAAWC,IAAI,IAJ9C,mBAINC,EAJM,KAIAC,EAJA,KAgBb,OACE,oCACE,6BAASf,UAAU,aACjB,mDACA,0BAAMgB,SAdS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACRR,GAAS,GACT,MAAOD,GACPC,GAAS,MAQL,2BACES,KAAK,OACLC,YAAY,UACZC,MAAOd,EACPe,SAAU,SAACN,GAAD,OAAOR,EAASQ,EAAEO,OAAOF,QACnCtB,UAAS,UAAKU,EAAQ,QAAU,QAElC,4BAAQV,UAAU,MAAMoB,KAAK,UAA7B,YAKJ,6BAASpB,UAAU,UAChBc,EAAKW,KAAI,SAACjB,EAAOtB,GAChB,OACE,kBAAC,EAAD,eACEwC,IAAKxC,GACDsB,EAFN,CAGEtB,MAAOA,EACPC,SAAUqB,EAAMmB,aCxC9BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5cf63f8b.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(false);\n  console.log(hexColor);\n  const bcg = rgb.join(\",\");\n  // const hex = rgbToHex(...rgb);\n  const hexValue = `#${hexColor}`;\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n  return (\n    <article\n      className={`color ${index > 10 && \"color-light\"}`}\n      style={{\n        backgroundColor: `rgb(${bcg})`,\n      }}\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hexValue);\n      }}\n    >\n      <p className=\"percent-value\"> {weight}% </p>\n      <p className=\"color-value\">{hexValue} </p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  //list of colors\n  const [list, setList] = useState(new Values(\"#f15025\").all(1));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      setList(colors);\n      setError(false);\n    } catch (error) {\n      setError(true);\n    }\n  };\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator app</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"#f15125\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            className={`${error ? \"error\" : null}`}\n          ></input>\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return (\n            <SingleColor\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n            ></SingleColor>\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}